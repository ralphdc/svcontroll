<?php
class MornodeController extends  CommonController{
    
    var $navTab = 'D890170';
    
    public function index(){
        
        $pageNum =empty($_REQUEST['numPerPage']) ?  ($_COOKIE['MornodePerPage']? $_COOKIE['MornodePerPage']:C('PAGE_LISTROWS') ): $_REQUEST['numPerPage'];
        $this->assign ( 'numPerPage', $pageNum ); //每页显示多少条
        $this->assign ( 'currentPage', !empty($_REQUEST[C('VAR_PAGE')])?$_REQUEST[C('VAR_PAGE')]:1);
        $dataModel = new MornodeModel();
        $result = $dataModel->findByPost($_POST,$_GET);
        $count = $dataModel->countByPost();
        $this->assign ( 'totalCount', $count );
        $this->assign('list',$result);
        $this->display();
    }
    
    public function delete()
    {
        if($_GET['id']){
            $dataModel = new MornodeModel();
            $sa = $dataModel->delete($_GET['id']);
            if(isset($sa['errorCode']) && $sa['errorCode'] == 0){
                $ret = array("statusCode"=>"1","message"=>'提交成功！',"navTabId"=>$this->navTab,
                    "rel"=>"","forwardUrl"=>"","callbackType"=>"");
                echo json_encode($ret);	return;
            }else{
                $ret = array("statusCode"=>"0","message"=> $sa['errorMessage'],"navTabId"=>$this->navTab,
                    "rel"=>"","forwardUrl"=>"","callbackType"=>"");
                echo json_encode($ret);	return;
            }
        }
    }
    
    public function edit(){
        if($_GET['id']){
            $dataModel = new MornodeModel();
            $sa = $dataModel->get($_GET['id']);
            if(isset($sa['errorCode']) && $sa['errorCode'] == 0){
              $this->assign('data',$sa['data']);
              /* echo "<pre>";
              print_r($sa['data']); */
              $this->display();
            }else{
                $ret = array("statusCode"=>"0","message"=> $sa['errorMessage'],"navTabId"=>"",
                    "rel"=>"","forwardUrl"=>"","callbackType"=>"");
                echo json_encode($ret);	return;
            }
        }
        
        if($_POST['nodeId']){
          if(empty($_POST['ServerInfo_id'])){
              $ret = array("statusCode"=>"0","message"=> "请选择监控节点对应的设备！","navTabId"=>"",
                  "rel"=>"","forwardUrl"=>"","callbackType"=>"");
              echo json_encode($ret);	return;
          }
          $_POST['serverId'] = $_POST['ServerInfo_id'];
          $_POST['templateId']  = $_POST['Template_id'];
          $_POST['creator'] = $_SESSION['cUserNo'];
          $model = new MornodeModel();
          $sv = $model->edit($_POST);
          if(isset($sv['errorCode']) && $sv['errorCode'] == 0){
              $ret = array("statusCode"=>"1","message"=>'提交成功！',"navTabId"=>$this->navTab,
                  "rel"=>"","forwardUrl"=>"","callbackType"=>"");
              echo json_encode($ret);	return;
          }else{
              $ret = array("statusCode"=>"0","message"=> $sv['errorMessage'],"navTabId"=>$this->navTab,
                  "rel"=>"","forwardUrl"=>"","callbackType"=>"");
              echo json_encode($ret);	return;
          }
        }
    }
    
    function add()
    {
      if($_POST){
          if(empty($_POST['ServerInfo_id'])){
              $ret = array("statusCode"=>"0","message"=> "请选择监控节点对应的设备！","navTabId"=>"",
                  "rel"=>"","forwardUrl"=>"","callbackType"=>"");
              echo json_encode($ret);	return;
          }
          
          $_POST['serverId']    = $_POST['ServerInfo_id'];
          $_POST['templateId']  = $_POST['Template_id'];
          $_POST['creator']     = $_SESSION['cUserNo'];
          
          $model = new MornodeModel();
          $sv = $model->add($_POST);
          if(isset($sv['errorCode']) && $sv['errorCode'] == 0){
              $ret = array("statusCode"=>"1","message"=>'提交成功！',"navTabId"=>$this->navTab,
                  "rel"=>"","forwardUrl"=>"","callbackType"=>"");
              echo json_encode($ret);	return;
          }else{
              $ret = array("statusCode"=>"0","message"=> $sv['errorMessage'],"navTabId"=>$this->navTab,
                  "rel"=>"","forwardUrl"=>"","callbackType"=>"");
              echo json_encode($ret);	return;
          }
      }
    }
    
  
    function queryServer()
    {
    
        $pageNum =empty($_REQUEST['numPerPage']) ? C('PAGE_LISTROWS') : $_REQUEST['numPerPage'];
        $this->assign ( 'numPerPage', $pageNum ); //每页显示多少条
        $this->assign ( 'currentPage', !empty($_REQUEST[C('VAR_PAGE')])?$_REQUEST[C('VAR_PAGE')]:1);
        $Servermanage = new ServermanageModel($_POST,$_GET);
        $result = $Servermanage->findByPost($_POST,$_GET);
        $count = $Servermanage->countByPost($_POST,$_GET);
        $this->assign ( 'totalCount', $count );
        $this->assign ( 'list', $result );
        $this->assign ( 'map', array('hostname'=>'','ipv'=>'','environment'=>'','isVirtual'=>''));
        
        $this->assign('virtual',$this->virtual);
        $this->assign('environment',C('CONST_ENVIRONMENT'));
        cookie('_currentUrl_', __SELF__);
        
        //取出设备类型列表；
        $DeviceType = new DeviceTypeModel();
        $deviceList = $DeviceType->query();
        $this->assign('deviceTypeList',$deviceList['data']);
        $this->assign('virtual',array('1'=>'物理机','2'=>'虚拟机'));
        $this->display();
    }
    
    function queryTemplate()
    {
        if($_GET['pageNum'])
        {
            $_REQUEST['numPerPage'] = empty($_REQUEST['numPerPage']) ?  ($_COOKIE['querySnmpPerPage']? $_COOKIE['querySnmpPerPage']:C('PAGE_LISTROWS') ): $_REQUEST['numPerPage'];
            $_REQUEST[C('VAR_PAGE')] = $_GET['pageNum'];
            $_POST['pageNum'] = $_GET['pageNum'];
        }
        $pageNum =empty($_REQUEST['numPerPage']) ?  ($_COOKIE['querySnmpPerPage']? $_COOKIE['querySnmpPerPage']:C('PAGE_LISTROWS') ): $_REQUEST['numPerPage'];
        $this->assign ( 'numPerPage', $pageNum ); //每页显示多少条
        $this->assign ( 'currentPage', !empty($_REQUEST[C('VAR_PAGE')])?$_REQUEST[C('VAR_PAGE')]:1);
        $dataModel = new SnmpModel();
        $result = $dataModel->findByPostForQuery($_POST,$_GET);
        $count = $dataModel->countByPost();
        $this->assign ( 'totalCount', $count );
        $this->assign('list',$result);
        $this->display();
    }
}